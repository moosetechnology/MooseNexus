"
I am a configurable model builder.
I am used to create a Moose model for a `NexusProject`.
The model is generated by a `NexusModelCreator` that knows how to parse the sources of the project.
"
Class {
	#name : 'NexusModelBuilder',
	#superclass : 'Object',
	#instVars : [
		'project',
		'withDependencies',
		'importer',
		'extractor'
	],
	#category : 'Moose-Nexus-Modeling',
	#package : 'Moose-Nexus',
	#tag : 'Modeling'
}

{ #category : 'building' }
NexusModelBuilder >> build [
	"Create the model"

	[
	self setUp.
	extractor run ] ensure: [ self cleanUp ]
]

{ #category : 'cleanup' }
NexusModelBuilder >> cleanUp [
	"delete temp directories"

	(project directory asFileReference / 'dependencies') deleteAll
]

{ #category : 'accessing' }
NexusModelBuilder >> extractor [

	^ extractor
]

{ #category : 'accessing' }
NexusModelBuilder >> extractor: aNexusModelCreator [

	extractor := aNexusModelCreator
]

{ #category : 'accessing' }
NexusModelBuilder >> importer [

	^ importer
]

{ #category : 'accessing' }
NexusModelBuilder >> importer: anObject [

	importer := anObject
]

{ #category : 'initialization' }
NexusModelBuilder >> initialize [

	withDependencies := true
]

{ #category : 'accessing' }
NexusModelBuilder >> project [

	^ project
]

{ #category : 'accessing' }
NexusModelBuilder >> project: aNexusProject [

	project := aNexusProject
]

{ #category : 'building' }
NexusModelBuilder >> setUp [

	| dependencies |
	dependencies := (project directory asFileReference / 'dependencies')
		                createDirectory.
	project dependencies do: [ :dependency |
		| artifact |
		artifact := (dependency at: #directory) asFileReference.
		artifact copyTo: dependencies / artifact basename ].
	extractor target: project directory
]

{ #category : 'accessing' }
NexusModelBuilder >> withDependencies [

	^ withDependencies
]

{ #category : 'accessing' }
NexusModelBuilder >> withDependencies: aBoolean [

	withDependencies := aBoolean
]
